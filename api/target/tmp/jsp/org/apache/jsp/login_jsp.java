/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2019-02-14 03:26:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>云测</title>\r\n");
      out.write("    <link href=\"/static/css/bootstrap.min.css?v=3.3.6\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/font-awesome.css?v=4.4.0\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/login.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/animate.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/style.css?v=4.1.0\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/sweetalert/sweetalert.css\" rel=\"stylesheet\">\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("    <script>if (window.top !== window.self) {\r\n");
      out.write("        window.top.location = window.location;\r\n");
      out.write("    }</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"signin\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"signinpanel\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-sm-12\">\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <div class=\"signinbox\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control uname\" placeholder=\"用户名\" required=\"\" id=\"username\"/>\r\n");
      out.write("                <input type=\"password\" class=\"form-control pword m-b\" placeholder=\"密码\" required=\"\" id=\"userpwd\"/>\r\n");
      out.write("                <br>\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-default btn-block\" id=\"login\">登录</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"signup-footer\">\r\n");
      out.write("        <div style=\"text-align: center;float: none\">\r\n");
      out.write("           <a class=\"label label-info\" herf=\"\">忘記密碼</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("            <a class=\"label label-info\" herf=\"\">用戶註冊</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 全局js -->\r\n");
      out.write("<script src=\"/static/js/jquery.min.js?v=2.1.4\"></script>\r\n");
      out.write("<script src=\"/static/js/bootstrap.min.js?v=3.3.6\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/cookie/jquery.cookie.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/sweetalert/sweetalert.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    $(document).keyup(function (event) {\r\n");
      out.write("        if (event.keyCode == 13) {\r\n");
      out.write("            $(\"#login\").trigger(\"click\");\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    var clicktag = 0;\r\n");
      out.write("    $(\"#login\").click(function () {\r\n");
      out.write("        if (clicktag == 1) {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"提示！\",\r\n");
      out.write("                text: \"您已经提交登录请求，请稍等！\",\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        var username = $(\"#username\").val();\r\n");
      out.write("        if (username == \"\") {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"提示！\",\r\n");
      out.write("                text: \"登录用户名不能为空！\",\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        var userpwd = $(\"#userpwd\").val();\r\n");
      out.write("        if (userpwd == \"\") {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"提示！\",\r\n");
      out.write("                text: \"登录密码不能为空！\",\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        if (clicktag == 0) {\r\n");
      out.write("            clicktag = 1;\r\n");
      out.write("        }\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"name\\\":\\\"\" + username + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"password\\\":\\\"\" + userpwd + \"\\\"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/user/login\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            async: true,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    $.cookie(\"Authentication\", msg.content.token);\r\n");
      out.write("                    localStorage.setItem(\"role\",msg.content.role);\r\n");
      out.write("                    localStorage.setItem(\"name\",msg.content.name);\r\n");
      out.write("                    window.location.href = \"index.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    clicktag = 0;\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
