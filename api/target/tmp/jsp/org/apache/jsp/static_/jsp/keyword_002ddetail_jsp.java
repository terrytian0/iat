/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2019-02-14 03:59:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.static_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class keyword_002ddetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("    <meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("    <meta http-equiv=\"expires\" content=\"0\">\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"favicon.ico\">\r\n");
      out.write("    <link href=\"/static/css/bootstrap.min.css?v=3.3.6\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/font-awesome.css?v=4.4.0\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/iCheck/custom.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/animate.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/style.css?v=4.1.0\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/sweetalert/sweetalert.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/bootstrap-table/bootstrap-table.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/bootstrap-editable/bootstrap-editable.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <link href=\"/static/css/plugins/iCheck/custom.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/js/plugins/jquery-ui-1.12.1/jquery-ui.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/json-viewer/jquery.json-viewer.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"gray-bg\">\r\n");
      out.write("<div class=\"wrapper wrapper-content animated fadeInRight\">\r\n");
      out.write("    <form role=\"form\" class=\"form-horizontal m-t well-g\" id=\"jacocoForm\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <div class=\"ibox float-e-margins\">\r\n");
      out.write("                    <div class=\"ibox-title\">\r\n");
      out.write("                        <h5>基础信息</h5>\r\n");
      out.write("                        <div class=\"ibox-tools\" style=\"margin-top: -9px;\">\r\n");
      out.write("                            <a class=\"btn btn-primary btn-sm\" onclick=\"updateKeyword()\">保存</a>\r\n");
      out.write("                            <a class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#debugModal\">调试</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"ibox-content\">\r\n");
      out.write("                        <div class=\"form-group draggable\">\r\n");
      out.write("                            <label class=\"col-sm-1 control-label\">名称：</label>\r\n");
      out.write("                            <div class=\"col-sm-5\">\r\n");
      out.write("                                <input type=\"text\" class=\"form-control\" id=\"keywordName\"\r\n");
      out.write("                                       aria-required=\"true\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group draggable\">\r\n");
      out.write("                            <label class=\"col-sm-1 control-label\">描述：</label>\r\n");
      out.write("                            <div class=\"col-sm-11\">\r\n");
      out.write("                                <textarea type=\"text\" rows=\"5\" class=\"form-control\" id=\"keywordDescription\"></textarea>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <div class=\"ibox float-e-margins\">\r\n");
      out.write("                    <div class=\"ibox-title\">\r\n");
      out.write("                        <h5>Parameter</h5>\r\n");
      out.write("                        <div class=\"ibox-tools\" style=\"margin-top: -9px;\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"ibox-content\">\r\n");
      out.write("                        <table id=\"parameterTable\" class=\"table table-hover\"></table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <div class=\"ibox float-e-margins\">\r\n");
      out.write("                    <div class=\"ibox-title\">\r\n");
      out.write("                        <h5>Api</h5>\r\n");
      out.write("                        <div class=\"ibox-tools\" style=\"margin-top: -9px;\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"ibox-content\">\r\n");
      out.write("                        <div class=\"table-responsive\">\r\n");
      out.write("                            <table id=\"apiTable\" class=\"table table-hover\"></table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 模态框（Modal） -->\r\n");
      out.write("<div class=\"modal fade\" id=\"debugModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content animated bounceInRight\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span\r\n");
      out.write("                        class=\"sr-only\">关闭</span>\r\n");
      out.write("                </button>\r\n");
      out.write("                <h4 class=\"modal-title\">环境</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"form-group\"><select class=\"form-control m-b\" style=\"height: 30px\" id=\"env\"></select></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onclick=\"keywordDebug()\">确定</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 模态框（Modal） -->\r\n");
      out.write("<div class=\"modal fade\" id=\"addExtractorModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n");
      out.write("     aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content animated bounceInRight\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span\r\n");
      out.write("                        class=\"sr-only\">关闭</span>\r\n");
      out.write("                </button>\r\n");
      out.write("                <h4 class=\"modal-title\">提取器</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <h4>类型</h4>\r\n");
      out.write("                    <select class=\"form-control m-b\" style=\"height: 30px\" id=\"extractorType\">\r\n");
      out.write("                        <option value=\"JSON\">JSON-PATH</option>\r\n");
      out.write("                        <option value=\"REGEXP\">正则表达式</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>提取规则</h4>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"extractorRule\" aria-required=\"true\">\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>参数名称</h4>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"extractorName\" aria-required=\"true\">\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>描述</h4>\r\n");
      out.write("                    <textarea type=\"text\" rows=\"5\" class=\"form-control\" id=\"extractorDescription\"\r\n");
      out.write("                              aria-required=\"true\"></textarea>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"extractorKeywordApiId\" aria-required=\"true\"\r\n");
      out.write("                           style=\"visibility:hidden\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onclick=\"addExtractor()\">确定</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 模态框（Modal） -->\r\n");
      out.write("<div class=\"modal fade\" id=\"addAssertModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n");
      out.write("     aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content animated bounceInRight\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span\r\n");
      out.write("                        class=\"sr-only\">关闭</span>\r\n");
      out.write("                </button>\r\n");
      out.write("                <h4 class=\"modal-title\">断言</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <h4>位置</h4>\r\n");
      out.write("                    <select class=\"form-control m-b\" style=\"height: 30px\" id=\"assertLocale\">\r\n");
      out.write("                        <option value=\"HTTPCODE\">Http Code</option>\r\n");
      out.write("                        <option value=\"HEADER\">Header</option>\r\n");
      out.write("                        <option value=\"BODY\">Body</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>规则类型</h4>\r\n");
      out.write("                    <select class=\"form-control m-b\" style=\"height: 30px\" id=\"assertType\">\r\n");
      out.write("                        <option value=\"JSON\">JSON-PATH</option>\r\n");
      out.write("                        <option value=\"REGEXP\">正则表达式</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>提取规则</h4>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"assertRule\" aria-required=\"true\">\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>比较方法</h4>\r\n");
      out.write("                    <select class=\"form-control m-b\" style=\"height: 30px\" id=\"assertMethod\">\r\n");
      out.write("                        <option value=\"EQUALS\">等于</option>\r\n");
      out.write("                        <option value=\"GREATER\">大于</option>\r\n");
      out.write("                        <option value=\"LESS\">小于</option>\r\n");
      out.write("                        <option value=\"CONTAINS\">包含</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>预期结果</h4>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"assertValue\" aria-required=\"true\">\r\n");
      out.write("                    <label></label>\r\n");
      out.write("                    <h4>描述</h4>\r\n");
      out.write("                    <textarea type=\"text\" rows=\"5\" class=\"form-control\" id=\"assertDescription\"\r\n");
      out.write("                              aria-required=\"true\"></textarea>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"assertKeywordApiId\" aria-required=\"true\"\r\n");
      out.write("                           style=\"visibility:hidden\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onclick=\"addAssert()\">确定</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 全局js -->\r\n");
      out.write("<script src=\"/static/js/jquery.min.js?v=2.1.4\"></script>\r\n");
      out.write("<script src=\"/static/js/bootstrap.min.js?v=3.3.6\"></script>\r\n");
      out.write("<!-- 自定义js -->\r\n");
      out.write("<script src=\"/static/js/content.js?v=1.0.0\"></script>\r\n");
      out.write("<script src=\"/static/js/iat.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/cookie/jquery.cookie.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/sweetalert/sweetalert.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/validate/jquery.validate.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/validate/messages_zh.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/form-validate.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/iCheck/icheck.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-table/bootstrap-table.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-editable/bootstrap-editable.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-table/locale/bootstrap-table-zh-CN.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-editable/bootstrap-table-editable.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/jquery-ui-1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/json-viewer/jquery.json-viewer.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    var keywordId;\r\n");
      out.write("    window.onload = function () {\r\n");
      out.write("        keywordId = window.location.href.getQuery(\"keywordId\");\r\n");
      out.write("        getKeyword(keywordId);\r\n");
      out.write("        getEnv();\r\n");
      out.write("    }\r\n");
      out.write("    var oTableInit = new Object();\r\n");
      out.write("    var apis;\r\n");
      out.write("    var debugResult = new Map();\r\n");
      out.write("\r\n");
      out.write("    $('#addExtractorModal').on('show.bs.modal', function (event) {\r\n");
      out.write("        var btnThis = $(event.relatedTarget); //触发事件的按钮\r\n");
      out.write("        // var modal = $(this);  //当前模态框\r\n");
      out.write("        $(\"#extractorKeywordApiId\").val(btnThis.data('id'));\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $('#addAssertModal').on('show.bs.modal', function (event) {\r\n");
      out.write("        var btnThis = $(event.relatedTarget); //触发事件的按钮\r\n");
      out.write("        // var modal = $(this);  //当前模态框\r\n");
      out.write("        $(\"#assertKeywordApiId\").val(btnThis.data('id'));\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    function updateKeyword() {\r\n");
      out.write("        var keywordName = $(\"#keywordName\").val();\r\n");
      out.write("        var keywordDescription = $(\"#keywordDescription\").val();\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"id\\\":\" + keywordId + \",\";\r\n");
      out.write("        data = data + \"\\\"name\\\":\\\"\" + keywordName + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"description\\\":\\\"\" + keywordDescription + \"\\\"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"put\",\r\n");
      out.write("            url: \"/keyword/update\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    self.location = document.referrer;\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getKeyword(keywordId) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"get\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/keyword/info?id=\" + keywordId,\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    $(\"#keywordName\").val(msg.content.name);\r\n");
      out.write("                    $(\"#keywordDescription\").val(msg.content.description);\r\n");
      out.write("                    getParamters(msg.content.id);\r\n");
      out.write("                    apis = msg.content.apis;\r\n");
      out.write("                    initApiTable();\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getParamters(keywordId) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"get\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/keyword/parameters?keywordId=\" + keywordId,\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    initParameterTable(msg.content);\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function addExtractor() {\r\n");
      out.write("        var type = $(\"#extractorType option:selected\").attr(\"value\");\r\n");
      out.write("        var keywordApiId = $(\"#extractorKeywordApiId\").val();\r\n");
      out.write("        var rule = $(\"#extractorRule\").val();\r\n");
      out.write("        var name = $(\"#extractorName\").val();\r\n");
      out.write("        var description = $(\"#extractorDescription\").val();\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"keywordApiId\\\":\" + keywordApiId + \",\";\r\n");
      out.write("        data = data + \"\\\"type\\\":\\\"\" + type + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"rule\\\":\\\"\" + rule + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"name\\\":\\\"\" + name + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"description\\\":\\\"\" + description + \"\\\"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            url: \"/extractor/create\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var extractorData = getExtractor(keywordApiId);\r\n");
      out.write("                    $(\"#extractor-assert-table-\" + keywordApiId).bootstrapTable('destroy');\r\n");
      out.write("                    initExtractor(keywordApiId, extractorData);\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        $('#addExtractorModal').modal('hide');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function addAssert() {\r\n");
      out.write("        var keywordApiId = $(\"#assertKeywordApiId\").val();\r\n");
      out.write("        var type = $(\"#assertType option:selected\").attr(\"value\");\r\n");
      out.write("        var locale = $(\"#assertLocale option:selected\").attr(\"value\");\r\n");
      out.write("        var method = $(\"#assertMethod option:selected\").attr(\"value\");\r\n");
      out.write("        var rule = $(\"#assertRule\").val();\r\n");
      out.write("        var value = $(\"#assertValue\").val();\r\n");
      out.write("        var description = $(\"#assertDescription\").val();\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"keywordApiId\\\":\" + keywordApiId + \",\";\r\n");
      out.write("        data = data + \"\\\"type\\\":\\\"\" + type + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"rule\\\":\\\"\" + rule + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"locale\\\":\\\"\" + locale + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"method\\\":\\\"\" + method + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"value\\\":\\\"\" + value + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"description\\\":\\\"\" + description + \"\\\"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            url: \"/assert/create\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var assertData = getAssert(keywordApiId);\r\n");
      out.write("                    $(\"#response-assert-table-\" + keywordApiId).bootstrapTable('destroy');\r\n");
      out.write("                    initAssert(keywordApiId, assertData);\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        $('#addAssertModal').modal('hide');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function initParameterTable(data) {\r\n");
      out.write("        $('#parameterTable').bootstrapTable({\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            columns: [\r\n");
      out.write("                {\r\n");
      out.write("                    title: '参数名',\r\n");
      out.write("                    field: 'name'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '参数值',\r\n");
      out.write("                    field: 'value',\r\n");
      out.write("                    editable: true\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '提取规则',\r\n");
      out.write("                    field: 'rule'\r\n");
      out.write("                }],\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function refreshApiTable() {\r\n");
      out.write("        $('#apiTable').bootstrapTable('destroy');\r\n");
      out.write("        initApiTable();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function initApiTable() {\r\n");
      out.write("        $('#apiTable').bootstrapTable({\r\n");
      out.write("            data: apis,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            detailView: true,\r\n");
      out.write("            columns: [\r\n");
      out.write("\r\n");
      out.write("                {\r\n");
      out.write("                    title: '序号',\r\n");
      out.write("                    field: 'id',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '名称',\r\n");
      out.write("                    field: 'detail.name'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '方法',\r\n");
      out.write("                    field: 'detail.method'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '路径',\r\n");
      out.write("                    field: 'detail.path'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '参数',\r\n");
      out.write("                    field: 'detail.parameters'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '排序',\r\n");
      out.write("                    field: 'idx'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '结果',\r\n");
      out.write("                    field: 'status',\r\n");
      out.write("                    events: operateEvents,\r\n");
      out.write("                    formatter: statusFormatter\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '操作',\r\n");
      out.write("                    field: 'button',\r\n");
      out.write("                    align: 'center',\r\n");
      out.write("                    formatter: keywordApiOptFormatter,\r\n");
      out.write("                    width: 280\r\n");
      out.write("                }],\r\n");
      out.write("            onExpandRow: function (index, row, $detail) {\r\n");
      out.write("                oTableInit.InitApiResult(index, row, $detail);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    oTableInit.InitApiResult = function (index, row, $detail) {\r\n");
      out.write("        var tableId = \"extractorTable-\" + row.id;\r\n");
      out.write("        var extractorTable = $detail.html(\"<div class=\\\"ibox-content\\\"><div class=\\\"tabs-container\\\"><ul class=\\\"nav nav-tabs\\\" id=\\\"response-tabs\\\"><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-general-tab-\" + row.id + \"\\\" aria-expanded=\\\"true\\\">General</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-header-tab-\" + row.id + \"\\\" aria-expanded=\\\"true\\\">Request Header</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-formdata-tab-\" + row.id + \"\\\" aria-expanded=\\\"true\\\">Request Formdata</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-body-tab-\" + row.id + \"\\\" aria-expanded=\\\"true\\\">Request Body</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-header-tab-\" + row.id + \"\\\" aria-expanded=\\\"true\\\">Response Header</a></li><li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-body-tab-\" + row.id + \"\\\" aria-expanded=\\\"false\\\">Response Body</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-extractor-tab-\" + row.id + \"\\\" aria-expanded=\\\"false\\\">提取器</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-assert-tab-\" + row.id + \"\\\" aria-expanded=\\\"false\\\">断言</a></li></ul><div class=\\\"tab-content\\\"><div id=\\\"request-general-tab-\" + row.id + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-general-\" + row.id + \"\\\"></div></div><div id=\\\"request-header-tab-\" + row.id + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-header-\" + row.id + \"\\\"></div></div><div id=\\\"request-formdata-tab-\" + row.id + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-formdata-\" + row.id + \"\\\"></div></div><div id=\\\"request-body-tab-\" + row.id + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-body-\" + row.id + \"\\\"></div></div><div id=\\\"response-header-tab-\" + row.id + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"response-header-\" + row.id + \"\\\"></div></div><div id=\\\"response-body-tab-\" + row.id + \"\\\" class=\\\"tab-pane active\\\"><div class=\\\"panel-body\\\"><a id=\\\"response-body-\" + row.id + \"\\\"></a></div></div><div id=\\\"response-extractor-tab-\" + row.id + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\"><div class=\\\"table-responsive\\\"><table id=\\\"response-extractor-table-\" + row.id + \"\\\" class=\\\"table table-hover\\\"></table></div></div></div><div id=\\\"response-assert-tab-\" + row.id + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\"><div class=\\\"table-responsive\\\"><table id=\\\"response-assert-table-\" + row.id + \"\\\" class=\\\"table table-hover\\\"></table></div></div></div></div></div></div>\").find('#' + tableId);\r\n");
      out.write("        var result = debugResult.get(row.id);\r\n");
      out.write("        if (result != undefined) {\r\n");
      out.write("            var general = result.general;\r\n");
      out.write("            var g = \"\";\r\n");
      out.write("            for (var key in general) {\r\n");
      out.write("                g = g + \"<li>\" + key + \" : \" + general[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#request-general-\" + row.id).html(g);\r\n");
      out.write("            var requestHeader = result.requestHeader;\r\n");
      out.write("            var reqh = \"\";\r\n");
      out.write("            for (var key in requestHeader) {\r\n");
      out.write("                reqh = reqh + \"<li>\" + key + \" : \" + requestHeader[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#request-header-\" + row.id).html(reqh);\r\n");
      out.write("\r\n");
      out.write("            var requestFormData = result.requestFormData;\r\n");
      out.write("            var reqf = \"\";\r\n");
      out.write("            for (var key in requestFormData) {\r\n");
      out.write("                reqf = reqf + \"<li>\" + key + \" : \" + requestFormData[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#request-formdata-\" + row.id).html(reqf);\r\n");
      out.write("\r\n");
      out.write("            if (result.requestBody != undefined) {\r\n");
      out.write("                try {\r\n");
      out.write("                    var requestJson = JSON.parse(result.requestBody);\r\n");
      out.write("                    $(\"#request-body-\" + row.id).jsonViewer(requestJson);\r\n");
      out.write("                } catch (e) {\r\n");
      out.write("                    $(\"#request-body-\" + row.id).html(result.requestBody.replace(/\\n/g, \"<br/>\").replace(/\\t/g, \"&nbsp;&nbsp;&nbsp;&nbsp;\").replace(/\\r/g, \"&emsp;\"));\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            //response\r\n");
      out.write("            var responseHeader = result.responseHeader;\r\n");
      out.write("            var reph = \"\";\r\n");
      out.write("            for (var key in responseHeader) {\r\n");
      out.write("                reph = reph + \"<li>\" + key + \" : \" + responseHeader[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#response-header-\" + row.id).html(reph);\r\n");
      out.write("            try {\r\n");
      out.write("                var responseJson = JSON.parse(result.responseBody);\r\n");
      out.write("                $(\"#response-body-\" + row.id).jsonViewer(responseJson);\r\n");
      out.write("            } catch (e) {\r\n");
      out.write("                $(\"#response-body-\" + row.id).html(result.responseBody.replace(/\\n/g, \"<br/>\").replace(/\\t/g, \"&nbsp;&nbsp;&nbsp;&nbsp;\").replace(/\\r/g, \"&emsp;\"));\r\n");
      out.write("            }\r\n");
      out.write("            var extractorData = result.extractors;\r\n");
      out.write("            initExtractor(row.id, extractorData);\r\n");
      out.write("            var assertData = result.asserts;\r\n");
      out.write("            initAssert(row.id, assertData);\r\n");
      out.write("        } else {\r\n");
      out.write("            var extractorData = getExtractor(row.id);\r\n");
      out.write("            initExtractor(row.id, extractorData);\r\n");
      out.write("            var assertData = getAssert(row.id);\r\n");
      out.write("            initAssert(row.id, assertData);\r\n");
      out.write("        }\r\n");
      out.write("        return oTableInit;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function initExtractor(keywordId, data) {\r\n");
      out.write("        var tableId = \"#response-extractor-table-\" + keywordId;\r\n");
      out.write("        $(tableId).bootstrapTable({\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            columns: [\r\n");
      out.write("                {\r\n");
      out.write("                    title: '序号',\r\n");
      out.write("                    field: 'id',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: 'ApiId',\r\n");
      out.write("                    field: 'keywordApiId',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '类型',\r\n");
      out.write("                    field: 'type'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '参数名',\r\n");
      out.write("                    field: 'name'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '规则',\r\n");
      out.write("                    field: 'rule'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '提取值',\r\n");
      out.write("                    field: 'value'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '描述',\r\n");
      out.write("                    field: 'description'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '操作',\r\n");
      out.write("                    field: 'button',\r\n");
      out.write("                    align: 'center',\r\n");
      out.write("                    formatter: extractorOptFormatter,\r\n");
      out.write("                    width: 100\r\n");
      out.write("                }]\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function initAssert(keywordId, data) {\r\n");
      out.write("        var tableId = \"#response-assert-table-\" + keywordId;\r\n");
      out.write("        $(tableId).bootstrapTable({\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            columns: [\r\n");
      out.write("                {\r\n");
      out.write("                    title: '序号',\r\n");
      out.write("                    field: 'id',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: 'ApiId',\r\n");
      out.write("                    field: 'keywordApiId',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '位置',\r\n");
      out.write("                    field: 'locale'\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '类型',\r\n");
      out.write("                    field: 'type'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '规则',\r\n");
      out.write("                    field: 'rule'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '比较方法',\r\n");
      out.write("                    field: 'method'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '预期结果',\r\n");
      out.write("                    field: 'value'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '实际结果',\r\n");
      out.write("                    field: 'actual'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '状态',\r\n");
      out.write("                    field: 'status',\r\n");
      out.write("                    formatter: statusFormatter\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '描述',\r\n");
      out.write("                    field: 'description'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '操作',\r\n");
      out.write("                    field: 'button',\r\n");
      out.write("                    align: 'center',\r\n");
      out.write("                    formatter: assertOptFormatter,\r\n");
      out.write("                    width: 100\r\n");
      out.write("                }]\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function assertOptFormatter(value, row, index) {\r\n");
      out.write("        return \"<a class=\\\"btn btn-danger btn-sm\\\" name=\\\"\" + row.keywordApiId + \"\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"deleteAssert(this)\\\">删除</a>\"\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function deleteAssert(obj) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"delete\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/assert/delete?assertId=\" + obj.id,\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var assertData = getAssert(obj.name);\r\n");
      out.write("                    $(\"#response-assert-table-\" + obj.name).bootstrapTable('destroy');\r\n");
      out.write("                    initAssert(obj.name, assertData);\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: \"获取Api参数失败！\" + msg.errorMsg,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function extractorOptFormatter(value, row, index) {\r\n");
      out.write("        return \"<a class=\\\"btn btn-danger btn-sm\\\" name=\\\"\" + row.keywordApiId + \"\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"deleteExtractor(this)\\\">删除</a>\"\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function deleteExtractor(obj) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"delete\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/extractor/delete?extractorId=\" + obj.id,\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var extractorData = getExtractor(obj.name);\r\n");
      out.write("                    $(\"#response-extractor-table-\" + obj.name).bootstrapTable('destroy');\r\n");
      out.write("                    initExtractor(obj.name, extractorData);\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: \"获取Api参数失败！\" + msg.errorMsg,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function keywordDebug() {\r\n");
      out.write("        var envId = $(\"#env option:selected\").attr(\"key\");\r\n");
      out.write("        if (envId == null) {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"提示\",\r\n");
      out.write("                text: \"请选择环境！\",\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        var parameterTableData = $(\"#parameterTable\").bootstrapTable('getData');\r\n");
      out.write("\r\n");
      out.write("        var parameters = \"[\";\r\n");
      out.write("        if (parameterTableData != undefined) {\r\n");
      out.write("            for (i = 0; i < parameterTableData.length; i++) {\r\n");
      out.write("                if (parameterTableData[i].value != undefined) {\r\n");
      out.write("                    parameters = parameters + \"{\";\r\n");
      out.write("                    parameters = parameters + \"\\\"name\\\":\\\"\" + parameterTableData[i].name + \"\\\",\";\r\n");
      out.write("                    parameters = parameters + \"\\\"value\\\":\\\"\" + parameterTableData[i].value + \"\\\"\";\r\n");
      out.write("                    parameters = parameters + \"}\";\r\n");
      out.write("                    if (i < parameterTableData.length - 1) {\r\n");
      out.write("                        parameters = parameters + \",\";\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        if (parameters.endsWith(\",\")) {\r\n");
      out.write("            parameters = parameters.substring(0, parameters.length - 1);\r\n");
      out.write("        }\r\n");
      out.write("        parameters = parameters + \"]\";\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"keywordId\\\":\" + keywordId + \",\";\r\n");
      out.write("        if (envId != null) {\r\n");
      out.write("            data = data + \"\\\"envId\\\":\\\"\" + envId + \"\\\",\";\r\n");
      out.write("        }\r\n");
      out.write("        data = data + \"\\\"parameters\\\":\" + parameters + \"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            url: \"/keyword/debug\",\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            data: data,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var content = msg.content.httpResults;\r\n");
      out.write("                    for (var r in content) {\r\n");
      out.write("                        debugResult.set(content[r].keywordApiId, content[r]);\r\n");
      out.write("                    }\r\n");
      out.write("                    for (var i in apis) {\r\n");
      out.write("                        if (debugResult.get(apis[i].id) != undefined) {\r\n");
      out.write("                            apis[i].status = debugResult.get(apis[i].id).successful;\r\n");
      out.write("                            apis[i].error = debugResult.get(apis[i].id).error;\r\n");
      out.write("\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    refreshApiTable();\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            },\r\n");
      out.write("            error: function (xhr, exception) {\r\n");
      out.write("                error(xhr, exception);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        $('#debugModal').modal('hide');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function getEnv() {\r\n");
      out.write("        var serviceId = localStorage.getItem(\"serviceId\")\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"get\",\r\n");
      out.write("            url: \"/service/env/get?serviceId=\" + serviceId,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var items = \"\";\r\n");
      out.write("                    $.each(msg.content, function (i, item) {\r\n");
      out.write("                        items = items + \"<option key='\" + item.id + \"'>\" + item.env + \"</option>\";\r\n");
      out.write("                    });\r\n");
      out.write("                    $(\"#env\").html(items);\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: \"修改Api失败！errormsg=\" + msg.errorMsg,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function rankApi(obj, opt) {\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"index\\\":\" + \"\\\"\" + opt + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"keywordApiId\\\":\" + obj.id + \",\";\r\n");
      out.write("        data = data + \"\\\"keywordId\\\":\" + obj.name;\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"PUT\",\r\n");
      out.write("            url: \"/keyword/idx\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    window.location.reload();\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.errorMsg,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function removeApi(obj) {\r\n");
      out.write("        var data = \"[\";\r\n");
      out.write("        data = data + obj.id + \"\";\r\n");
      out.write("        data = data + \"]\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"delete\",\r\n");
      out.write("            url: \"/keyword/api/remove\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    window.location.reload();\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function keywordApiOptFormatter(value, row, index) {\r\n");
      out.write("        return \"<a class=\\\"btn btn-primary btn-sm\\\" name=\\\"\" + row.keywordId + \"\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"apiUp(this)\\\">上移</a>\" +\r\n");
      out.write("            \"   <a class=\\\"btn btn-primary btn-sm\\\" name=\\\"\" + row.keywordId + \"\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"apiDown(this)\\\">下移</a>\" +\r\n");
      out.write("            \"   <a class=\\\"btn btn-danger btn-sm\\\" name=\\\"\" + row.keywordId + \"\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"removeApi(this)\\\">删除</a>\" +\r\n");
      out.write("            \"   <a class=\\\"btn btn-primary btn-sm\\\" data-id='\" + row.id + \"'  data-toggle=\\\"modal\\\" data-target=\\\"#addExtractorModal\\\">提取器</a>\" +\r\n");
      out.write("            \"   <a class=\\\"btn btn-primary btn-sm\\\" data-id='\" + row.id + \"'  data-toggle=\\\"modal\\\" data-target=\\\"#addAssertModal\\\">断言</a>\"\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    window.operateEvents = {\r\n");
      out.write("        \"click #errormsg\": function (e, value, row, index) {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"错误详情\",\r\n");
      out.write("                text: row.error,\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
