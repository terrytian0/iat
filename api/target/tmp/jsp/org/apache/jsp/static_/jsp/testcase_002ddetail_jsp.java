/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2019-02-14 04:41:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.static_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class testcase_002ddetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("    <meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("    <meta http-equiv=\"expires\" content=\"0\">\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"favicon.ico\">\r\n");
      out.write("    <link href=\"/static/css/bootstrap.min.css?v=3.3.6\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/font-awesome.css?v=4.4.0\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/iCheck/custom.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/animate.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/style.css?v=4.1.0\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/sweetalert/sweetalert.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/bootstrap-table/bootstrap-table.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/bootstrap-editable/bootstrap-editable.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <link href=\"/static/css/plugins/iCheck/custom.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/js/plugins/jquery-ui-1.12.1/jquery-ui.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/static/css/plugins/json-viewer/jquery.json-viewer.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"gray-bg\">\r\n");
      out.write("<div class=\"wrapper wrapper-content animated fadeInRight\">\r\n");
      out.write("    <form role=\"form\" class=\"form-horizontal m-t well-g\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <div class=\"ibox float-e-margins\">\r\n");
      out.write("                    <div class=\"ibox-title\">\r\n");
      out.write("                        <h5>基础信息</h5>\r\n");
      out.write("                        <div class=\"ibox-tools\" style=\"margin-top: -9px;\">\r\n");
      out.write("                            <a class=\"btn btn-primary btn-sm\" onclick=\"updateTestcase()\">保存</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"ibox-content\">\r\n");
      out.write("                        <div class=\"form-group draggable\">\r\n");
      out.write("                            <label class=\"col-sm-1 control-label\">名称：</label>\r\n");
      out.write("                            <div class=\"col-sm-5\">\r\n");
      out.write("                                <input type=\"text\" class=\"form-control\" id=\"testcaseName\"\r\n");
      out.write("                                       aria-required=\"true\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group draggable\">\r\n");
      out.write("                            <label class=\"col-sm-1 control-label\">描述：</label>\r\n");
      out.write("                            <div class=\"col-sm-11\">\r\n");
      out.write("                                <textarea type=\"text\" rows=\"5\" class=\"form-control\" id=\"testcaseDescription\"></textarea>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <div class=\"ibox float-e-margins\">\r\n");
      out.write("                    <div class=\"ibox-title\">\r\n");
      out.write("                        <h5>Parameter</h5>\r\n");
      out.write("                        <div class=\"ibox-tools\" style=\"margin-top: -9px;\">\r\n");
      out.write("                            <a class=\"btn btn-primary btn-sm\" onclick=\"addParameter()\">添加</a>\r\n");
      out.write("                            <a class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#debugModal\">调试</a>\r\n");
      out.write("                            <a class=\"btn btn-primary btn-sm\" onclick=\"saveParameter()\">保存</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"ibox-content\">\r\n");
      out.write("                        <table id=\"parameterTable\" class=\"table table-hover\"></table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <div class=\"ibox float-e-margins\">\r\n");
      out.write("                    <div class=\"ibox-title\">\r\n");
      out.write("                        <h5>Keyword</h5>\r\n");
      out.write("                        <div class=\"ibox-tools\" style=\"margin-top: -9px;\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"ibox-content\">\r\n");
      out.write("                        <div class=\"table-responsive\">\r\n");
      out.write("                            <table id=\"keywordTable\" class=\"table table-hover\"></table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 模态框（Modal） -->\r\n");
      out.write("<div class=\"modal fade\" id=\"debugModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content animated bounceInRight\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span\r\n");
      out.write("                        class=\"sr-only\">关闭</span>\r\n");
      out.write("                </button>\r\n");
      out.write("                <h4 class=\"modal-title\">环境</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"form-group\"><select class=\"form-control m-b\" style=\"height: 30px\" id=\"env\"></select></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onclick=\"testcaseDebug()\">确定</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 全局js -->\r\n");
      out.write("<script src=\"/static/js/jquery.min.js?v=2.1.4\"></script>\r\n");
      out.write("<script src=\"/static/js/bootstrap.min.js?v=3.3.6\"></script>\r\n");
      out.write("<!-- 自定义js -->\r\n");
      out.write("<script src=\"/static/js/content.js?v=1.0.0\"></script>\r\n");
      out.write("<script src=\"/static/js/iat.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/cookie/jquery.cookie.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/sweetalert/sweetalert.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/validate/jquery.validate.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/validate/messages_zh.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/form-validate.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/iCheck/icheck.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-table/bootstrap-table.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-editable/bootstrap-editable.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-table/locale/bootstrap-table-zh-CN.min.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/bootstrap-editable/bootstrap-table-editable.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/jquery-ui-1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/json-viewer/jquery.json-viewer.js\"></script>\r\n");
      out.write("<script src=\"/static/js/plugins/layer/layer.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    var testcaseId;\r\n");
      out.write("    var title;\r\n");
      out.write("    window.onload = function () {\r\n");
      out.write("        testcaseId = window.location.href.getQuery(\"testcaseId\");\r\n");
      out.write("        getTestcase(testcaseId);\r\n");
      out.write("        initParameterTable(testcaseId);\r\n");
      out.write("        getEnv();\r\n");
      out.write("    }\r\n");
      out.write("    var oTableInit = new Object();\r\n");
      out.write("    //通过用例详情获取的关键字列表\r\n");
      out.write("    var keywords;\r\n");
      out.write("    //测试用例执行返回结果\r\n");
      out.write("    var testcaseResultMap = new Map();\r\n");
      out.write("    //通过用例详情获取的关键字Map\r\n");
      out.write("    var keywordApisMap = new Map();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function updateTestcase() {\r\n");
      out.write("        var testcaseName = $(\"#testcaseName\").val();\r\n");
      out.write("        var testcaseDescription = $(\"#testcaseDescription\").val();\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"id\\\":\" + testcaseId + \",\";\r\n");
      out.write("        data = data + \"\\\"name\\\":\\\"\" + testcaseName + \"\\\",\";\r\n");
      out.write("        data = data + \"\\\"description\\\":\\\"\" + testcaseDescription + \"\\\"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"put\",\r\n");
      out.write("            url: \"/testcase/update\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    self.location = document.referrer;\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getTestcase(testcaseId) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"get\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/testcase/info?id=\" + testcaseId,\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    $(\"#testcaseName\").val(msg.content.name);\r\n");
      out.write("                    $(\"#testcaseDescription\").val(msg.content.description);\r\n");
      out.write("                    keywords = msg.content.keywords;\r\n");
      out.write("                    for (var i in keywords) {\r\n");
      out.write("                        keywordApisMap.set(keywords[i].id, keywords[i].detail.apis);\r\n");
      out.write("                    }\r\n");
      out.write("                    initKeywordTable();\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getParamterTitle(testcaseId) {\r\n");
      out.write("        var ptitle;\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"put\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/testcase/parameter/title?testcaseId=\" + testcaseId,\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    ptitle = msg.content;\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        return ptitle;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getParamterData(testcaseId) {\r\n");
      out.write("        var data;\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"get\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            url: \"/testcase/parameter/data?testcaseId=\" + testcaseId,\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    data = msg.content;\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        return data;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function initParameterTable(testcaseId) {\r\n");
      out.write("        title = getParamterTitle(testcaseId)\r\n");
      out.write("        var data = getParamterData(testcaseId)\r\n");
      out.write("        $('#parameterTable').bootstrapTable({\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            pageNumber : 1, //初始化加载第一页\r\n");
      out.write("            pagination : true,//是否分页\r\n");
      out.write("            sidePagination : 'client',//server:服务器端分页|client：前端分页\r\n");
      out.write("            pageSize : 10,//单页记录数\r\n");
      out.write("            pageList : [ 5, 10, 20, 30 ],//可选择单页记录数\r\n");
      out.write("            columns: getParameterColumns(title)\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function addParameter() {\r\n");
      out.write("        var count = $('#parameterTable').bootstrapTable('getData').length;\r\n");
      out.write("        var row = \"{\";\r\n");
      out.write("        var titleLength = Object.getOwnPropertyNames(title).length;\r\n");
      out.write("        for (var key in title) {\r\n");
      out.write("            row = row + key + \":\" + \"'\" + title[key] + \"',\";\r\n");
      out.write("        }\r\n");
      out.write("        var timestamp = (new Date()).getTime();\r\n");
      out.write("        row = row + \"rowNum:\" + \"'unique-\" + timestamp + \"'\";\r\n");
      out.write("        row = row + \"}\";\r\n");
      out.write("        $('#parameterTable').bootstrapTable('insertRow', {index: count, row: eval(\"(\" + row + \")\")});\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getParameterColumns(title) {\r\n");
      out.write("        var col = \"[\";\r\n");
      out.write("        col = col + \"{\";\r\n");
      out.write("        col = col + \"title: '全选',\";\r\n");
      out.write("        col = col + \"field: 'select',\";\r\n");
      out.write("        col = col + \"checkbox: true,\";\r\n");
      out.write("        col = col + \"width: 25,\";\r\n");
      out.write("        col = col + \"align: 'center',\";\r\n");
      out.write("        col = col + \"valign: 'middle'\";\r\n");
      out.write("        col = col + \"},\";\r\n");
      out.write("        col = col + \"{\";\r\n");
      out.write("        col = col + \"title: 'row',\";\r\n");
      out.write("        col = col + \"field: 'rowNum',\";\r\n");
      out.write("        col = col + \"visible: false\";\r\n");
      out.write("        col = col + \"},\";\r\n");
      out.write("        for (var key in title) {\r\n");
      out.write("            col = col + \"{\";\r\n");
      out.write("            col = col + \"title: '\" + key + \"',\";\r\n");
      out.write("            col = col + \"field: '\" + key + \"',\";\r\n");
      out.write("            col = col + \"editable: true\";\r\n");
      out.write("            col = col + \"},\";\r\n");
      out.write("        }\r\n");
      out.write("        col = col + \"{\";\r\n");
      out.write("        col = col + \"title: '操作',\";\r\n");
      out.write("        col = col + \"field: 'button',\";\r\n");
      out.write("        col = col + \"align: 'center',\";\r\n");
      out.write("        col = col + \"events: operateEvents,\";\r\n");
      out.write("        col = col + \"formatter: parameterOptFormatter,\";\r\n");
      out.write("        col = col + \"width: 200\";\r\n");
      out.write("        col = col + \"}\";\r\n");
      out.write("        col = col + \"]\";\r\n");
      out.write("        return eval(\"(\" + col + \")\");\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function parameterOptFormatter(value, row, index) {\r\n");
      out.write("        return \"<a class=\\\"btn btn-danger btn-sm\\\" id=\\\"parameterDelete\\\">删除</a>\";\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getRowData(row) {\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        data = data + \"\\\"testcaseId\\\":\" + testcaseId + \",\";\r\n");
      out.write("        if (row.rowNum.startsWith(\"unique-\") == false) {\r\n");
      out.write("            data = data + \"\\\"rowNum\\\":\" + row.rowNum + \",\";\r\n");
      out.write("        }\r\n");
      out.write("        data = data + \"\\\"parameters\\\":\" + getRowParameter(row) + \"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        return data;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getRowParameter(row) {\r\n");
      out.write("        var param = \"{\"\r\n");
      out.write("        var k = 0;\r\n");
      out.write("        var length = Object.getOwnPropertyNames(row).length;\r\n");
      out.write("        for (var key in row) {\r\n");
      out.write("            if (key != \"rowNum\" && key != \"select\") {\r\n");
      out.write("                k = k + 1;\r\n");
      out.write("                param = param + \"\\\"\" + key + \"\\\":\\\"\" + row[key] + \"\\\"\";\r\n");
      out.write("                if (k < length - 2) {\r\n");
      out.write("                    param = param + \",\";\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        param = param + \"}\";\r\n");
      out.write("        return param;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getDatas() {\r\n");
      out.write("        var parameterTableDatas = $('#parameterTable').bootstrapTable('getData')\r\n");
      out.write("        var data = \"[\";\r\n");
      out.write("        var k = 0;\r\n");
      out.write("        for (var i in parameterTableDatas) {\r\n");
      out.write("            k = k + 1;\r\n");
      out.write("            data = data + getRowData(parameterTableDatas[i]);\r\n");
      out.write("            if (k < parameterTableDatas.length) {\r\n");
      out.write("                data = data + \",\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        data = data + \"]\";\r\n");
      out.write("        return data;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function saveParameter(row) {\r\n");
      out.write("        var data;\r\n");
      out.write("        if (row == undefined) {\r\n");
      out.write("            data = getDatas();\r\n");
      out.write("        } else {\r\n");
      out.write("            data = \"[\";\r\n");
      out.write("            data = data + getRowData(row);\r\n");
      out.write("            data = data + \"]\";\r\n");
      out.write("        }\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"put\",\r\n");
      out.write("            url: \"/testcase/parameter\",\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: \"保存参数成功\",\r\n");
      out.write("                        type: \"success\"\r\n");
      out.write("                    });\r\n");
      out.write("                    refreshParameterTable();\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            },\r\n");
      out.write("            error: function (xhr, exception) {\r\n");
      out.write("                error(xhr, exception);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function deleteParameter(rowNum) {\r\n");
      out.write("        if (rowNum.startsWith(\"unique-\")) {\r\n");
      out.write("            $('#parameterTable').bootstrapTable('remove', {field: 'rowNum', values: [rowNum]});\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"delete\",\r\n");
      out.write("            url: \"/testcase/parameter?testcaseId=\" + testcaseId + \"&rowNum=\" + rowNum,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    $('#parameterTable').bootstrapTable('remove', {field: 'rowNum', values: [rowNum]});\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            },\r\n");
      out.write("            error: function (xhr, exception) {\r\n");
      out.write("                error(xhr, exception);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function refreshKeywordTable() {\r\n");
      out.write("        $('#keywordTable').bootstrapTable('destroy');\r\n");
      out.write("        initKeywordTable();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function refreshParameterTable() {\r\n");
      out.write("        $('#parameterTable').bootstrapTable('destroy');\r\n");
      out.write("        initParameterTable(testcaseId);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function initKeywordTable() {\r\n");
      out.write("        $('#keywordTable').bootstrapTable({\r\n");
      out.write("            data: keywords,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            detailView: true,\r\n");
      out.write("            columns: [\r\n");
      out.write("\r\n");
      out.write("                {\r\n");
      out.write("                    title: '序号',\r\n");
      out.write("                    field: 'id',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '关键字id',\r\n");
      out.write("                    field: 'keywordId',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '名称',\r\n");
      out.write("                    field: 'detail.name'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '方法',\r\n");
      out.write("                    field: 'detail.description'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '排序',\r\n");
      out.write("                    field: 'idx'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '结果',\r\n");
      out.write("                    field: 'status',\r\n");
      out.write("                    formatter: statusFormatter\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '操作',\r\n");
      out.write("                    field: 'button',\r\n");
      out.write("                    align: 'center',\r\n");
      out.write("                    formatter: testcaseKeywordOptFormatter,\r\n");
      out.write("                    width: 280\r\n");
      out.write("                }],\r\n");
      out.write("            onExpandRow: function (index, row, $detail) {\r\n");
      out.write("                oTableInit.InitApiTable(index, row, $detail);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function testcaseKeywordOptFormatter(value, row, index) {\r\n");
      out.write("        return \"<a class=\\\"btn btn-primary btn-sm\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"keywordUp(this)\\\">上移</a>\" +\r\n");
      out.write("            \"   <a class=\\\"btn btn-primary btn-sm\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"keywoedDown(this)\\\">下移</a>\" +\r\n");
      out.write("            \"   <a class=\\\"btn btn-danger btn-sm\\\" name=\\\"\" + row.testcaseId + \"\\\" id=\\\"\" + row.id + \"\\\" onclick=\\\"removeKeyword(this)\\\">删除</a>\"\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    oTableInit.InitApiTable = function (index, row, $detail) {\r\n");
      out.write("        var tableId = \"api-table-\" + row.id;\r\n");
      out.write("        var apiTable = $detail.html('<table id=\\\"api-table-' + row.id + '\\\"></table>').find('#' + tableId);\r\n");
      out.write("        var apis = keywordApisMap.get(row.id);\r\n");
      out.write("        var testcaseKeywordId = row.id;\r\n");
      out.write("        if (testcaseResultMap.get(testcaseKeywordId) != undefined) {\r\n");
      out.write("            var keywordResult = testcaseResultMap.get(testcaseKeywordId).httpResults;\r\n");
      out.write("            var keywordApiMaps = new Map();\r\n");
      out.write("            for (var i in keywordResult) {\r\n");
      out.write("                keywordApiMaps.set(keywordResult[i].apiId, keywordResult[i]);\r\n");
      out.write("            }\r\n");
      out.write("            for (var i in apis) {\r\n");
      out.write("                if (keywordApiMaps.get(apis[i].apiId) != undefined) {\r\n");
      out.write("                    apis[i].status = keywordApiMaps.get(apis[i].apiId).successful;\r\n");
      out.write("                    apis[i].error = keywordApiMaps.get(apis[i].apiId).error;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $(apiTable).bootstrapTable({\r\n");
      out.write("            data: apis,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            detailView: true,\r\n");
      out.write("            columns: [\r\n");
      out.write("                {\r\n");
      out.write("                    title: '序号',\r\n");
      out.write("                    field: 'id',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: 'ApiId',\r\n");
      out.write("                    field: 'apiId',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '名称',\r\n");
      out.write("                    field: 'detail.name'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '方法',\r\n");
      out.write("                    field: 'detail.method',\r\n");
      out.write("                    formatter: methodFormatter\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '路径',\r\n");
      out.write("                    field: 'detail.path'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '参数',\r\n");
      out.write("                    field: 'detail.parameters'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '排序',\r\n");
      out.write("                    field: 'idx'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '结果',\r\n");
      out.write("                    field: 'status',\r\n");
      out.write("                    events: operateEvents,\r\n");
      out.write("                    formatter: statusFormatter\r\n");
      out.write("                }],\r\n");
      out.write("            onExpandRow: function (index, row, $detail) {\r\n");
      out.write("                oTableInit.InitApiResult(index, row, $detail, testcaseKeywordId);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("        return oTableInit;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    window.operateEvents = {\r\n");
      out.write("        \"click #parameterDelete\": function (e, value, row, index) {\r\n");
      out.write("            deleteParameter(row.rowNum);\r\n");
      out.write("        },\r\n");
      out.write("        \"click #errormsg\": function (e, value, row, index) {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"错误详情\",\r\n");
      out.write("                text: row.error,\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    oTableInit.InitApiResult = function (index, row, $detail, testcaseKeywordId) {\r\n");
      out.write("        $detail.html(\"<div class=\\\"ibox-content\\\"><div class=\\\"tabs-container\\\"><ul class=\\\"nav nav-tabs\\\" id=\\\"response-tabs\\\"><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-general-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"true\\\">General</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-header-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"true\\\">Request Header</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-formdata-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"true\\\">Request Formdata</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#request-body-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"true\\\">Request Body</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-header-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"true\\\">Response Header</a></li><li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-body-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"false\\\">Response Body</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-extractor-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"false\\\">提取器</a></li><li class=\\\"\\\"><a data-toggle=\\\"tab\\\" href=\\\"#response-assert-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" aria-expanded=\\\"false\\\">断言</a></li></ul><div class=\\\"tab-content\\\"><div id=\\\"request-general-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-general-\" + row.id + \"-\" + testcaseKeywordId + \"\\\"></div></div><div id=\\\"request-header-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-header-\" + row.id + \"-\" + testcaseKeywordId + \"\\\"></div></div><div id=\\\"request-formdata-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-formdata-\" + row.id + \"-\" + testcaseKeywordId + \"\\\"></div></div><div id=\\\"request-body-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"request-body-\" + row.id + \"-\" + testcaseKeywordId + \"\\\"></div></div><div id=\\\"response-header-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\" id=\\\"response-header-\" + row.id + \"-\" + testcaseKeywordId + \"\\\"></div></div><div id=\\\"response-body-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane active\\\"><div class=\\\"panel-body\\\"><a id=\\\"response-body-\" + row.id + \"-\" + testcaseKeywordId + \"\\\"></a></div></div><div id=\\\"response-extractor-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\"><div class=\\\"table-responsive\\\"><table id=\\\"response-extractor-table-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"table table-hover\\\"></table></div></div></div><div id=\\\"response-assert-tab-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"tab-pane\\\"><div class=\\\"panel-body\\\"><div class=\\\"table-responsive\\\"><table id=\\\"response-assert-table-\" + row.id + \"-\" + testcaseKeywordId + \"\\\" class=\\\"table table-hover\\\"></table></div></div></div></div></div></div>\");\r\n");
      out.write("        //TODO API提取器\r\n");
      out.write("        var keywordApiId = row.id;\r\n");
      out.write("        if (testcaseResultMap.get(testcaseKeywordId) == null) {\r\n");
      out.write("            var extractorData = getExtractor(keywordApiId);\r\n");
      out.write("            $(\"#response-extractor-table-\" + keywordApiId + \"-\" + testcaseKeywordId).bootstrapTable('destroy');\r\n");
      out.write("            initExtractor(testcaseKeywordId, keywordApiId, extractorData);\r\n");
      out.write("\r\n");
      out.write("            var assertData = getAssert(keywordApiId);\r\n");
      out.write("            $(\"#response-assert-table-\" + keywordApiId + \"-\" + testcaseKeywordId).bootstrapTable('destroy');\r\n");
      out.write("            initAssert(testcaseKeywordId, keywordApiId, assertData);\r\n");
      out.write("            return oTableInit;\r\n");
      out.write("        }\r\n");
      out.write("        var httpResults = testcaseResultMap.get(testcaseKeywordId).httpResults;\r\n");
      out.write("        var result;\r\n");
      out.write("        for (var i in httpResults) {\r\n");
      out.write("            if (httpResults[i].apiId == row.apiId) {\r\n");
      out.write("                result = httpResults[i];\r\n");
      out.write("                break;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        if (result != undefined) {\r\n");
      out.write("            var general = result.general;\r\n");
      out.write("            var g = \"\";\r\n");
      out.write("            for (var key in general) {\r\n");
      out.write("                g = g + \"<li>\" + key + \" : \" + general[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#request-general-\" + row.id + \"-\" + testcaseKeywordId).html(g);\r\n");
      out.write("            var requestHeader = result.requestHeader;\r\n");
      out.write("            var reqh = \"\";\r\n");
      out.write("            for (var key in requestHeader) {\r\n");
      out.write("                reqh = reqh + \"<li>\" + key + \" : \" + requestHeader[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#request-header-\" + row.id + \"-\" + testcaseKeywordId).html(reqh);\r\n");
      out.write("\r\n");
      out.write("            var requestFormData = result.requestFormData;\r\n");
      out.write("            var reqf = \"\";\r\n");
      out.write("            for (var key in requestFormData) {\r\n");
      out.write("                reqf = reqf + \"<li>\" + key + \" : \" + requestFormData[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#request-formdata-\" + row.id + \"-\" + testcaseKeywordId).html(reqf);\r\n");
      out.write("\r\n");
      out.write("            if (result.requestBody != undefined) {\r\n");
      out.write("                try {\r\n");
      out.write("                    var requestJson = JSON.parse(result.requestBody);\r\n");
      out.write("                    $(\"#request-body-\" + row.id + \"-\" + testcaseKeywordId).jsonViewer(requestJson);\r\n");
      out.write("                } catch (e) {\r\n");
      out.write("                    $(\"#request-body-\" + row.id + \"-\" + testcaseKeywordId).html(result.requestBody.replace(/\\n/g, \"<br/>\").replace(/\\t/g, \"&nbsp;&nbsp;&nbsp;&nbsp;\").replace(/\\r/g, \"&emsp;\"));\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            var responseHeader = result.responseHeader;\r\n");
      out.write("            var reph = \"\";\r\n");
      out.write("            for (var key in responseHeader) {\r\n");
      out.write("                reph = reph + \"<li>\" + key + \" : \" + responseHeader[key] + \"</li>\"\r\n");
      out.write("            }\r\n");
      out.write("            $(\"#response-header-\" + row.id + \"-\" + testcaseKeywordId).html(reph);\r\n");
      out.write("            try {\r\n");
      out.write("                var responseJson = JSON.parse(result.responseBody);\r\n");
      out.write("                $(\"#response-body-\" + row.id + \"-\" + testcaseKeywordId).jsonViewer(responseJson);\r\n");
      out.write("            } catch (e) {\r\n");
      out.write("                $(\"#response-body-\" + row.id + \"-\" + testcaseKeywordId).html(result.responseBody.replace(/\\n/g, \"<br/>\").replace(/\\t/g, \"&nbsp;&nbsp;&nbsp;&nbsp;\").replace(/\\r/g, \"&emsp;\"));\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            var extractorData = result.extractors;\r\n");
      out.write("            $(\"#response-extractor-table-\" + keywordApiId + \"-\" + testcaseKeywordId).bootstrapTable('destroy');\r\n");
      out.write("            initExtractor(testcaseKeywordId, keywordApiId, extractorData);\r\n");
      out.write("\r\n");
      out.write("            var assertData = result.asserts;\r\n");
      out.write("            $(\"#response-assert-table-\" + keywordApiId + \"-\" + testcaseKeywordId).bootstrapTable('destroy');\r\n");
      out.write("            initAssert(testcaseKeywordId, keywordApiId, assertData);\r\n");
      out.write("        }\r\n");
      out.write("        return oTableInit;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function initAssert(testcaseKeywordId, keywordApiId, data) {\r\n");
      out.write("        var tableId = \"#response-assert-table-\" + keywordApiId + \"-\" + testcaseKeywordId;\r\n");
      out.write("        $(tableId).bootstrapTable({\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            columns: [\r\n");
      out.write("                {\r\n");
      out.write("                    title: '序号',\r\n");
      out.write("                    field: 'id',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: 'ApiId',\r\n");
      out.write("                    field: 'keywordApiId',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '位置',\r\n");
      out.write("                    field: 'locale'\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '类型',\r\n");
      out.write("                    field: 'type'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '规则',\r\n");
      out.write("                    field: 'rule'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '比较方法',\r\n");
      out.write("                    field: 'method'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '预期结果',\r\n");
      out.write("                    field: 'value'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '实际结果',\r\n");
      out.write("                    field: 'actual'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '状态',\r\n");
      out.write("                    field: 'status',\r\n");
      out.write("                    formatter: statusFormatter\r\n");
      out.write("                }]\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function initExtractor(testcaseKeywordId, keywordApiId, data) {\r\n");
      out.write("        var tableId = \"#response-extractor-table-\" + keywordApiId + \"-\" + testcaseKeywordId;\r\n");
      out.write("        $(tableId).bootstrapTable({\r\n");
      out.write("            data: data,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            idField: \"id\",\r\n");
      out.write("            columns: [\r\n");
      out.write("                {\r\n");
      out.write("                    title: '序号',\r\n");
      out.write("                    field: 'id',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: 'ApiId',\r\n");
      out.write("                    field: 'keywordApiId',\r\n");
      out.write("                    visible: false\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title: '类型',\r\n");
      out.write("                    field: 'type'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '参数名',\r\n");
      out.write("                    field: 'name'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '规则',\r\n");
      out.write("                    field: 'rule'\r\n");
      out.write("                }, {\r\n");
      out.write("                    title: '提取值',\r\n");
      out.write("                    field: 'value'\r\n");
      out.write("                }]\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function testcaseDebug() {\r\n");
      out.write("        var envId = $(\"#env option:selected\").attr(\"key\");\r\n");
      out.write("        if (envId == null) {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"提示\",\r\n");
      out.write("                text: \"请选择环境！\",\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var parameterTableData = $(\"#parameterTable\").bootstrapTable('getSelections');\r\n");
      out.write("        if (parameterTableData.length != 1) {\r\n");
      out.write("            swal({\r\n");
      out.write("                title: \"提示！\",\r\n");
      out.write("                text: \"请选择一行参数进行调试！\",\r\n");
      out.write("                type: \"error\"\r\n");
      out.write("            });\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        parameters = getRowParameter(parameterTableData[0])\r\n");
      out.write("        var data = \"{\";\r\n");
      out.write("        if (envId != null) {\r\n");
      out.write("            data = data + \"\\\"envId\\\":\" + envId + \",\";\r\n");
      out.write("        }\r\n");
      out.write("        data = data + \"\\\"testcaseId\\\":\" + testcaseId + \",\";\r\n");
      out.write("        data = data + \"\\\"parameters\\\":\" + parameters + \"\";\r\n");
      out.write("        data = data + \"}\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            url: \"/testcase/debug\",\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            data: data,\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var keywordResults = msg.content.keywordResults;\r\n");
      out.write("                    for (var krs in keywordResults) {\r\n");
      out.write("                        testcaseResultMap.set(keywordResults[krs].testcaseKeywordId, keywordResults[krs]);\r\n");
      out.write("                    }\r\n");
      out.write("                    for (var i in keywords) {\r\n");
      out.write("                        if (testcaseResultMap.get(keywords[i].id) != undefined) {\r\n");
      out.write("                            keywords[i].status = testcaseResultMap.get(keywords[i].id).status;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    refreshKeywordTable();\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            },\r\n");
      out.write("            error: function (xhr, exception) {\r\n");
      out.write("                error(xhr, exception);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        $('#debugModal').modal('hide');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function refreshTestcaseTable() {\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getEnv() {\r\n");
      out.write("        var serviceId = localStorage.getItem(\"serviceId\")\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: \"get\",\r\n");
      out.write("            url: \"/service/env/get?serviceId=\" + serviceId,\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            beforeSend: function (request) {\r\n");
      out.write("                request.setRequestHeader(\"Authentication\", $.cookie(\"Authentication\"));\r\n");
      out.write("            },\r\n");
      out.write("            success: function (msg) {\r\n");
      out.write("                if (msg.status) {\r\n");
      out.write("                    var items = \"\";\r\n");
      out.write("                    $.each(msg.content, function (i, item) {\r\n");
      out.write("                        items = items + \"<option key='\" + item.id + \"'>\" + item.env + \"</option>\";\r\n");
      out.write("                    });\r\n");
      out.write("                    $(\"#env\").html(items);\r\n");
      out.write("                } else if (msg.code == \"D0000104\") {\r\n");
      out.write("                    window.location.href = \"/login.jsp\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    swal({\r\n");
      out.write("                        title: \"提示！\",\r\n");
      out.write("                        text: msg.message,\r\n");
      out.write("                        type: \"error\"\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
